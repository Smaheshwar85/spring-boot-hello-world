pipeline {
    agent any
 environment {
        GCR_REGISTRY = "gcr.io" // Change to your GCR registry URL
        DEST_PROJECT_ID = "terraform" // Change to your GCP Project ID
        IMAGE_NAME = "java-webserver" // Change to your desired image name
        IMAGE_TAG = "latest" // Change to your desired image tag
    }
     parameters {
        string(name: 'PROJECT_ID', defaultValue: 'devopsjunction23', description: 'Google Cloud Project ID')
        string(name: 'REGION', defaultValue: 'us-central1', description: 'Google Cloud Region')
		string(name: 'DEST_PROJECT_ID', defaultValue: 'terraform-gcp-395808', description: 'Google Cloud destinationProject ID')
		string(name: 'REPO_NAME', defaultValue: 'src', description: 'Google Cloud destinationProject ID')
		string(name: 'DEST_REPO_NAME', defaultValue: 'dest', description: 'Google Cloud destinationProject ID')
		string(name: 'LOCATION', defaultValue: 'US-central1', description: 'Google Cloud destinationProject ID')

    }
        stages {
            stage('Parameters'){
                steps {
                    script {
                    properties([
                            parameters([
                                [$class: 'ChoiceParameter', 
                                    choiceType: 'PT_SINGLE_SELECT', 
                                    description: 'Select the Environemnt from the Dropdown List', 
                                    filterLength: 1, 
                                    filterable: false, 
                                    name: 'ENV', 
                                    script: [
                                        $class: 'GroovyScript', 
                                        fallbackScript: [
                                            classpath: [], 
                                            sandbox: false, 
                                            script: 
                                                "return['Could not get The environemnts']"
                                        ], 
                                        script: [
                                            classpath: [], 
                                            sandbox: false, 
                                            script: 
                                                "return['test','prod']"
                                        ]
                                    ]
                                ],
                                
                            ])
                        ])
                    }
                }
            }
            stage('Deploy:Prep'){
                steps{
                     script{
                        echo "selected enviornment :" +ENV
                     }
                }
            }
            stage('Deploy to Artifact registery and run'){
                steps{
                    script{
                        echo 'Deploy jars'
                         if (ENV.equals("test")){
                                             def repositoryname = "${DEST_PROJECT_ID}-${env.BUILD_NUMBER}"
                                               withCredentials([file(credentialsId: 'cred', variable: 'CRED')]){
                                               def command = """
                                               gcloud auth activate-service-account --key-file="$CRED"
                                               gcloud config set project terraform-gcp-395808
                                               printf 'yes' | gcloud artifacts repositories create $repositoryname --repository-format=docker --location=us-central1 --description="created repo"
                                               gcloud auth configure-docker  us-central1-docker.pkg.dev
                                           """
                                            sh(script: command, returnStatus: true)
                                            sh "docker tag us-central1-docker.pkg.dev/devopsjunction23/global/gcr.io/devopsjunction23/hello-world us-central1-docker.pkg.dev/terraform-gcp-395808/$repositoryname/gcr.io/devopsjunction23/hello-world "
                                            sh "docker push us-central1-docker.pkg.dev/terraform-gcp-395808/$repositoryname/gcr.io/devopsjunction23/hello-world"

                                            def command1 = """
                                            gcloud run deploy  $repositoryname --image us-central1-docker.pkg.dev/terraform-gcp-395808/$repositoryname/gcr.io/devopsjunction23/hello-world --platform managed --region us-central1 --allow-unauthenticated --port 8082
                                            """
                                                sh(script: command1, returnStdout: true).trim()
 
                                                       }
                                              }
                                                   
                        else (ENV.equals("prod")){

                                    def repositoryname = "${DEST_PROJECT_ID}-${env.BUILD_NUMBER}"
                                    withCredentials([file(credentialsId: 'terraMachineOne', variable: 'CRED')]){
                                    def command = """
                                    gcloud auth activate-service-account --key-file="$CRED"
                                    gcloud config set project terra-project-396714
                                    printf 'yes' | gcloud artifacts repositories create $repositoryname --repository-format=docker --location=us-central1 --description="created repo"
                                    gcloud auth configure-docker  us-central1-docker.pkg.dev
                                     """
                                    sh(script: command, returnStatus: true)
                                    sh "docker tag us-central1-docker.pkg.dev/devopsjunction23/global/gcr.io/devopsjunction23/hello-world us-central1-docker.pkg.dev/terra-project-396714/$repositoryname/gcr.io/devopsjunction23/hello-world "
                                    sh "docker push us-central1-docker.pkg.dev/terra-project-396714/$repositoryname/gcr.io/devopsjunction23/hello-world"

                                    def command1 = """
                                    gcloud run deploy  $repositoryname --image us-central1-docker.pkg.dev/terraform-gcp-395808/$repositoryname/gcr.io/devopsjunction23/hello-world --platform managed --region us-central1 --allow-unauthenticated --port 8082
                                    """
                                     sh(script: command1, returnStdout: true).trim()
                                    }
                        }
 
                 }
             }
        }
    }
}

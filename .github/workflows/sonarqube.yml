on:
  push:
    branches:
      - main
jobs:
  Build:
    name: Build and analyze
    runs-on: self-hosted  # Use self-hosted runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure full history for better analysis relevance

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'  # Optional, alternative distributions are available.

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository  # Corrected path for Maven cache
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze with Maven and SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # Make sure SONAR_TOKEN is set in GitHub Secrets
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}  # Make sure SONAR_HOST_URL is set in GitHub Secrets
        run: mvn clean verify sonar:sonar  
      - name: Build the project
        run: mvn clean install

      - name: Build Docker Image for Spring Boot App
        run: |
          docker build -t my-spring-boot-app .
        
      - name: Run the Spring Boot App in Docker
        run: |
          docker run -d -p 8080:8080 my-spring-boot-app
          echo "Spring Boot app is running in Docker at http://localhost:8080"
        
      - name: Run OWASP ZAP Scan
        run: |
            docker run --rm -u zap -v "${{ github.workspace }}:/zap/wrk/:rw" zaproxy/zap-stable zap-full-scan.py -t http://host.docker.internal:8080 -r zap-report.html

            echo "OWASP ZAP Scan completed"

      - name: Upload ZAP report
        uses: actions/upload-artifact@v3
        with:
          name: zap-report
          path: zap-report.html

      - name: Stop Docker Container
        run: |
          docker ps -q --filter "ancestor=my-spring-boot-app" | xargs docker stop
          echo "Stopped Spring Boot app container"

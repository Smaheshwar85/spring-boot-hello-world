name: Build and Scan Spring Boot App


on:
  push:
    branches:
      - main

jobs:
  Build:
    name: Build and Analyze
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and Analyze with Maven and SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn clean verify sonar:sonar

      - name: Build Docker Image
        run: docker build -t my-spring-boot-app .

      - name: Run Docker Container
        run: docker run -d -p 8081:8080 --name my-app-containers my-spring-boot-app

  zap-scan:
    name: ZAP Scan Baseline
    runs-on: self-hosted
    needs: Build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create zap.yaml File
        run: |
          $zapFile = ".github\workflows\zap.yaml"
          if (-Not (Test-Path $zapFile)) {
            New-Item -ItemType File -Path $zapFile -Force
          }

      - name: Run ZAP Scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          token: ${{ secrets.PAT_TOKEN }}
          target: "http://host.docker.internal:8080"
          cmd_options: |
            -t "http://host.docker.internal:8080"
            -r zap-report.html
          allow_issue_writing: false

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: zap-report.html

  StopDocker:
    name: Stop Docker Container
    runs-on: self-hosted
    needs: zap-scan
    steps:
      - name: Stop and Remove Container
        run: |
          docker stop my-app-container
          docker rm my-app-container
